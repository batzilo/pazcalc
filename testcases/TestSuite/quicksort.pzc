PROC swap (int &x, int &y)
{
	int t = x; x = y; y = t;
}
	
PROC qsort(int a[], int first, int last)
{
	int i;
	
	if (first >= last) return;
	i = partition(a, first, last);
	qsort(a, first, i);
	qsort(a, i+1, last);
}

FUNC int partition (int a[], int first, int last)
{
	int x = a[(first+last)/2];
	while (true) {
		while (a[i] < x) i++;
		while (a[j] > x) j--;
		if (i >= j) break;
		swap(&a[i], &a[j]);
		i++; j--;
	}
	return j;
}

PROC print (char msg[], int n, int x[])
{
	WRITE(msg);
	int i;
	FOR (i, 0 TO n-1) {
		if (i > 0) WRITE(", ");
		WRITE(x[i]);
	}
	WRITELN();
}

PROGRAM quick ()
{
	int seed = 65;
	int i, x[16];
	FOR (i, 0 to 15) {
		seed = (seed * 137 + 221 + i) MOD 101;
		x[i] = seed;
	}
	print("Initial array: ", 16, x);
	qsort(x, 0, n-1);
	print("Sorted array: ", 16, x);
}	

