const int INF = 65535;

PROC dijkstra_aux(int s, int n, int w[][])
{
	int i, v, min, cnt, d[10];
	bool inSPtree[10];

	FOR(i, 0 TO n-1) {
		d[i] = INF;
		inSPtree[i] = false;
	}
	d[s] = 0;
	cnt = 0;

	while(count < n-1) {
		min = INF; 
		FOR(i, O TO n-1) {
			if (!inSPtree[i] && d[i] < min) {
				u = i;
			}
		inSPtree[u] = true;
		FOR(v, 0 TO n-1) {
			if (w[u][v] > 0)
				if (d[v] > d[u] + w[u][v]) 
					d[v] = d[u] + w[u][v];
		count++;
	}
}

PROGRAM dijkstra ()
{

	int w[10][10]; 

	w[0][0] = 0; w[0][1] = 2; w[0][2] = 4; w[0][3] = 0; w[0][4] = 0; w[0][5] = 0; w[0][6] = 0; w[0][7] = 0; w[0][8] = 0; w[0][9] = 0;
	w[1][0] = 1; w[1][1] = 0; w[1][2] = 5; w[1][3] = 0; w[1][4] = 0; w[1][5] = 0; w[1][6] = 3; w[1][7] = 0; w[1][8] = 0; w[1][9] = 0;
	w[2][0] = 9; w[2][1] = 8; w[2][2] = 0; w[2][3] = 6; w[2][4] = 2; w[2][5] = 4; w[2][6] = 0; w[2][7] = 0; w[2][8] = 0; w[2][9] = 0;
	w[3][0] = 0; w[3][1] = 0; w[3][2] = 3; w[3][3] = 0; w[3][4] = 4; w[3][5] = 0; w[3][6] = 0; w[3][7] = 0; w[3][8] = 0; w[3][9] = 0;
	w[4][0] = 0; w[4][1] = 0; w[4][2] = 1; w[4][3] = 1; w[4][4] = 0; w[4][5] = 1; w[4][6] = 0; w[4][7] = 0; w[4][8] = 0; w[4][9] = 0;
	w[5][0] = 0; w[5][1] = 0; w[5][2] = 9; w[5][3] = 0; w[5][4] = 7; w[5][5] = 0; w[5][6] = 1; w[5][7] = 0; w[5][8] = 0; w[5][9] = 0;
	w[6][0] = 0; w[6][1] = 4; w[6][2] = 0; w[6][3] = 0; w[6][4] = 0; w[6][5] = 6; w[6][6] = 0; w[6][7] = 0; w[6][8] = 0; w[6][9] = 1;
	w[7][0] = 0; w[7][1] = 0; w[7][2] = 0; w[7][3] = 0; w[7][4] = 0; w[7][5] = 0; w[7][6] = 0; w[7][7] = 0; w[7][8] = 6; w[7][9] = 0;
	w[8][0] = 0; w[8][1] = 0; w[8][2] = 0; w[8][3] = 0; w[8][4] = 0; w[8][5] = 0; w[8][6] = 0; w[8][7] = 5; w[8][8] = 0; w[8][9] = 10;
	w[9][0] = 0; w[9][1] = 0; w[9][2] = 0; w[9][3] = 0; w[9][4] = 0; w[9][5] = 0; w[9][6] = 7; w[9][7] = 0; w[9][8] = 3; w[9][9] = 0;
	
	dijkstra_aux(0, 10, w);

}
